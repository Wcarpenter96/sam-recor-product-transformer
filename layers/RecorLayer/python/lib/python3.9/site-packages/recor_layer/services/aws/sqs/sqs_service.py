from typing import Dict

import boto3
from botocore.exceptions import ClientError


class SQSService:
    """Handles interactions with Amazon SQS."""

    def __init__(self, queue_url: str):
        """
        Initializes the SQSService.

        Args:
            queue_url: The URL of the SQS queue.
        Raises:
            ValueError: If the queue URL is not provided.
        """
        if not queue_url:
            raise ValueError("SQS Queue URL must be provided.")
        self.sqs_client = boto3.client("sqs")
        self.queue_url = queue_url

    def send_message(self, message_body: str) -> Dict:
        """
        Sends a message to the SQS queue.

        Args:
            message_body: The body of the message to send (as a string).

        Returns:
            The response from the SQS send_message operation.

        Raises:
            ClientError: If an error occurs when sending the message.
        """
        try:
            response = self.sqs_client.send_message(
                QueueUrl=self.queue_url, MessageBody=message_body
            )
            return response
        except ClientError as e:
            raise ClientError(
                f"Error sending message to SQS queue {self.queue_url}: {e}",
                e.operation_name,
            ) from e
