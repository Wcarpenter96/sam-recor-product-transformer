from typing import List, cast, Optional

from recor_layer.models.woocommerce.woocommerce_product import \
    WooCommerceProduct
from recor_layer.requests.woocommerce.woocommerce_base_request import \
    WooCommerceBaseRequest


class WooCommerceBatchUpdateProductsRequest(WooCommerceBaseRequest):
    """
    By default, it's limited to up to 100 objects to be created, updated or deleted.
    """

    def run(
        self,
            new_products: Optional[List[WooCommerceProduct]] = None,
            old_products: Optional[List[WooCommerceProduct]] = None,
            delete_product_ids: Optional[List[int]] = None,
    ) -> dict:
        if new_products is None:
            new_products = []
        if old_products is None:
            old_products = []
        if delete_product_ids is None:
            delete_product_ids = []

        products_json = {
            "create": [product.to_json() for product in new_products],
            "update": [product.to_json() for product in old_products],
            "delete": delete_product_ids
        }

        print("ATTEMPT: Batch Updating WooCommerce Products:", products_json)

        response = self.client.post("products/batch", products_json)

        if response.ok:
            # TODO: Handle Create/Update Failures
            print("SUCCESS: Updated WooCommerce Products:", response.json())
            return cast(dict, response.json())
        else:
            raise Exception(response.text)
