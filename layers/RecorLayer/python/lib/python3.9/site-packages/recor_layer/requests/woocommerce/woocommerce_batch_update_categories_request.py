from typing import List, cast, Optional

from recor_layer.models.woocommerce.woocommerce_category import WooCommerceCategory
from recor_layer.requests.woocommerce.woocommerce_base_request import (
    WooCommerceBaseRequest,
)


class WooCommerceBatchUpdateCategoriesRequest(WooCommerceBaseRequest):
    """
    By default, it's limited to up to 100 objects to be created, updated or deleted.
    """

    def run(
        self,
        new_categories: Optional[List[WooCommerceCategory]] = None,
        old_categories: Optional[List[WooCommerceCategory]] = None,
        delete_categories_ids: Optional[List[int]] = None,
    ) -> dict:
        if new_categories is None:
            new_categories = []
        if old_categories is None:
            old_categories = []
        if delete_categories_ids is None:
            delete_categories_ids = []

        categories_json = {
            "create": [category.to_json() for category in new_categories],
            "update": [category.to_json() for category in old_categories],
            "delete": delete_categories_ids,
        }

        print("ATTEMPT: Batch Updating WooCommerce Categories:", categories_json)

        response = self.client.post("products/categories/batch", categories_json)

        if response.ok:
            # TODO: Handle Create/Update Failures
            print("SUCCESS: Updated WooCommerce Categories:", response.json())
            return cast(dict, response.json())
        else:
            raise Exception(response.text)
